plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.12"
}

dependencies {
    //spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //h2
    runtimeOnly 'com.h2database:h2'

    //mysql driver
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // redis & redisson
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.37.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // aws s3
    implementation platform('software.amazon.awssdk:bom:2.31.2')
    implementation 'software.amazon.awssdk:s3'

    // webclient 사용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // webclient 테스트
    testImplementation("com.squareup.okhttp3:mockwebserver:4.12.0")

    // JavaMailSender
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}

clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect { fileTree(dir: it, exclude: [
                        "**/controller/**",
                        "**/config/**",
                        "**/dto/**",
                        "**/exception/**",
                        "**/Q*.class"
                ]) })
        )
    }
}